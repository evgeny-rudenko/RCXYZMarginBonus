SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF OBJECT_ID('DBO.MARGIN_BONUS_OPTIMA') IS NULL EXEC('CREATE PROCEDURE DBO.MARGIN_BONUS_OPTIMA AS RETURN')

GO
ALTER PROCEDURE DBO.MARGIN_BONUS_OPTIMA (@XMLPARAM NTEXT)
AS

DECLARE @ALL_CONTRACTOR BIT
,@HDOC INT
,@DATE_FR DATETIME
,@DATE_TO DATETIME
,@USE_ACT bit

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT

SELECT
	@DATE_FR = DATE_FR,
	@DATE_TO = DATE_TO,
	@USE_ACT = USE_ACT
FROM OPENXML(@HDOC, '/XML') WITH(
	DATE_FR DATETIME 'DATE_FR',
	DATE_TO DATETIME 'DATE_TO',
	USE_ACT bit 'USE_ACT'
)

SELECT * INTO #CONTRACTOR FROM OPENXML(@HDOC, '//CONTRACTOR') WITH(ID_CONTRACTOR BIGINT '.')
IF @@ROWCOUNT = 0 SET @ALL_CONTRACTOR = 1 ELSE SET @ALL_CONTRACTOR = 0

EXEC SP_XML_REMOVEDOCUMENT @HDOC

declare @allCheques bit

create table #cheques_from_acts(ID_DOCUMENT_BASE_GLOBAL uniqueidentifier)

if (@USE_ACT = 1)
begin
	insert into #cheques_from_acts
	select ARTB.[ID_DOCUMENT_BASE_GLOBAL]
	from ACT_RETURN_TO_BUYER ARTB
	where ARTB.[DATE] BETWEEN @DATE_FR AND @DATE_TO
		and ARTB.DOCUMENT_STATE = 'PROC'
		and ID_DOCUMENT_BASE_GLOBAL is not null

	if (select @@ROWCOUNT) = 0
		set @allCheques = 1
	else
		set @allCheques = 0
end else
	set @allCheques = 1

;WITH PERIOD
AS
(
    SELECT 
        CH.ID_CHEQUE_GLOBAL
		,CH.ID_USER_DATA
    FROM CHEQUE CH
    WHERE CH.CHEQUE_TYPE = 'SALE'
		and CH.DOCUMENT_STATE = 'PROC'
        AND CH.DATE_CHEQUE between @DATE_FR and @DATE_TO
		and (@allCheques = 1 or CH.ID_CHEQUE_GLOBAL not in (select [ID_DOCUMENT_BASE_GLOBAL] from #cheques_from_acts))
),

PERIOD_MARGIN_BONUS
AS
(
    SELECT
		C.ID_USER_DATA
		,CI.ID_LOT_GLOBAL
		,QUANTITY = sum(CI.QUANTITY)
		,MARGIN_BONUS = sum(case sign(CI.SUMM - (L.PRICE_SUP * CI.QUANTITY)) 
			when 1 then (CI.SUMM - (L.PRICE_SUP * CI.QUANTITY)) * ISNULL(ca.MOTIVATION_PERCENT, 0) / 100
			else 0 
		end)
		,SUM_SUP = sum(L.PRICE_SUP * CI.QUANTITY)
		,SUM_RET = sum(CI.SUMM)
		,SUM_RETJV = sum(ci.SUMM*GOODS.IMPORTANT)
		--,SUM_SUPJV = sum(sum(L.PRICE_SUP * CIJV.QUANTITY))
    FROM PERIOD C
		inner JOIN CHEQUE_ITEM CI   ON   CI.ID_CHEQUE_GLOBAL   = C.ID_CHEQUE_GLOBAL
		--inner join CHEQUE_ITEM CIJV ON CIJV.ID_CHEQUE_GLOBAL   = C.ID_CHEQUE_GLOBAL
		inner join LOT L on CI.ID_LOT_GLOBAL = L.ID_LOT_GLOBAL
		inner join GOODS ON GOODS.ID_GOODS = L.ID_GOODS
		INNER JOIN dbo.STORE WITH(NOLOCK) ON STORE.ID_STORE = L.ID_STORE
		INNER JOIN CONTRACTOR STORE_CONTRACTOR ON STORE_CONTRACTOR.ID_CONTRACTOR = STORE.ID_CONTRACTOR
		LEFT JOIN CONTRACTOR_ATTRIBUTES CA ON CA.ID_CONTRACTOR_GLOBAL = STORE_CONTRACTOR.ID_CONTRACTOR_GLOBAL
		
		--where CIJV.ID_GOODS in (select ID_GOODS from GOODS where IMPORTANT = 1)
	group by CI.ID_LOT_GLOBAL, C.ID_USER_DATA


    UNION ALL

    SELECT
		RC.ID_USER_DATA
		,CI.ID_LOT_GLOBAL
		,QUANTITY = -sum(CI.QUANTITY)
		,MARGIN_BONUS = -sum(case sign(CI.SUMM - (L.PRICE_SUP * CI.QUANTITY)) 
			when 1 then (CI.SUMM - (L.PRICE_SUP * CI.QUANTITY)) * ISNULL(ca.MOTIVATION_PERCENT, 0) / 100
			else 0 
		end)
		,SUM_SUP = -sum(L.PRICE_SUP * CI.QUANTITY)
		,SUM_RET = -sum(CI.SUMM)
		,SUM_RETJV =0
		--,SUM_SUPJV =0
    FROM PERIOD C
        INNER JOIN CHEQUE RC ON RC.CHEQUE_TYPE = 'RETURN' AND RC.ID_DOCUMENT_BASE_GLOBAL = C.ID_CHEQUE_GLOBAL
        inner JOIN CHEQUE_ITEM CI ON RC.ID_CHEQUE_GLOBAL = CI.ID_CHEQUE_GLOBAL
		inner join LOT L on CI.ID_LOT_GLOBAL = L.ID_LOT_GLOBAL
		INNER JOIN dbo.STORE WITH(NOLOCK) ON STORE.ID_STORE = L.ID_STORE
		INNER JOIN CONTRACTOR STORE_CONTRACTOR ON STORE_CONTRACTOR.ID_CONTRACTOR = STORE.ID_CONTRACTOR
		LEFT JOIN CONTRACTOR_ATTRIBUTES CA ON CA.ID_CONTRACTOR_GLOBAL = STORE_CONTRACTOR.ID_CONTRACTOR_GLOBAL
	group by CI.ID_LOT_GLOBAL, RC.ID_USER_DATA
	
)

--select count( *) from PERIOD_MARGIN_BONUS

SELECT
	C.ID_CONTRACTOR
	,CONTRACTOR_NAME = C.NAME
	,CASHIER = LMB.ID_USER_DATA
	,CASHIER_NAME = isnull(US.FULL_NAME, '-')
	--выводитс€ суммарна€ маржа по всем товарам, присутствующим в чеках, пробитых провизором, за период анализа. 
	,MARGIN = sum(LMB.SUM_RET - LMB.SUM_SUP)
	,MARGIN_BONUS = round(SUM(LMB.MARGIN_BONUS), 1)
	--товарооборот Ц разница между суммой продаж и суммой закупки за период дл€ анализа;
	,TURNOVER = sum(SUM_RET)
	,JV = sum (SUM_RETJV)
	--,JVMARGIN = sum (SUM_RETJV-SUM_SUPJV)
FROM PERIOD_MARGIN_BONUS LMB
	inner join LOT L on LMB.ID_LOT_GLOBAL = L.ID_LOT_GLOBAL
	inner join STORE S on L.ID_STORE = S.ID_STORE
	inner join CONTRACTOR C on S.ID_CONTRACTOR = C.ID_CONTRACTOR
	left join META_USER US on LMB.ID_USER_DATA = US.USER_NUM
where (@ALL_CONTRACTOR = 1 or S.ID_CONTRACTOR in (select ID_CONTRACTOR from #CONTRACTOR))
group by C.ID_CONTRACTOR
	,C.NAME
	,LMB.ID_USER_DATA
	,US.FULL_NAME
order by 2, 4


RETURN 0
GO

--EXEC MARGIN_BONUS_OPTIMA N'
--<XML>
--	<DATE_FR>2014-05-08T00:00:00.000</DATE_FR>
--	<DATE_TO>2015-10-10T00:00:00.000</DATE_TO>
--</XML>'